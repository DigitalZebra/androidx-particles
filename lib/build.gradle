apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

group = 'androidx.particles'
version = '1.4.0-SNAPSHOT'

description = 'A particle system library for standard Android UI.'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29

        versionCode 7
        versionName project.version
    }

    buildTypes {
    }

    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

// Kotest configuration
android.testOptions {
    unitTests.all {
        useJUnitPlatform()
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.1.0'

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'androidx.core:core-ktx:1.3.0'
    testImplementation 'io.mockk:mockk:1.10.0'                      // MockK framework
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:4.0.6'   // Kotest framework
    testImplementation 'io.kotest:kotest-assertions-core-jvm:4.0.6' // Kotest core jvm assertions
}

task javadoc(type: Javadoc) {
    group = 'documentation'
    description = 'Generate Javadoc'

    source = android.sourceSets.main.java.srcDirs
    classpath = project.files(android.getBootClasspath().join(File.pathSeparator))
    project.logger.lifecycle(classpath.getFiles().toString())

    options {
        charSet = 'UTF-8'
        encoding = 'UTF-8'
        docEncoding = 'UTF-8'

        stylesheetFile rootProject.file('docs/javadoc/stylesheet.css')

        linksOffline 'http://developer.android.com/reference/', "${android.sdkDirectory}/docs/reference"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

apply from: 'publish.gradle'
apply from: 'license.gradle'
